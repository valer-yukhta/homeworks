Текущее доманшее задание. Обязательное

1. Здесь представлены разные данные, присваемые (помещаемые в) переменные $something, $ohter, $what, $presidents, $child и $year. Перечислите ТИПЫ этих данных через запятую в той же последовательности, в которой они идут в нижеследующем примере:
$something = 110.010101;
$ohter = "0xFFFF";
*** People {
    var $health;
    var $age;
    function People($health = "normally", $age) 
    {
        $this->physiology = $health;
        $this->lifecycle = $age;
    }
    function how_feel() 
    {
        return $this->health;
    }
    function how_old() 
    {
        return $this->age;
    }
}
$what = true;
$presidents = ***("USA" => "Obama",
    "Ukraine" => "Poroshenko"
);
$child = new People;
$year = 2016;
---------------------
Я закрыл звёздочками те места, где содержатся подсказки.
2. Дан массив с элементами 'html', 'css', 'php', 'js', 'jq'. С помощью цикла foreach выведите эти слова в столбик.
 
3. Дан массив с элементами 1, 20, 15, 17, 24, 35. С помощью цикла foreach найдите сумму элементов этого массива. Запишите ее в переменную $result.
 
4. Дан массив с элементами 26, 17, 136, 12, 79, 15. С помощью цикла foreach найдите сумму квадратов элементов этого массива. Результат запишите переменную $result.
 
5. Дан массив $arr. С помощью первого цикла foreach выведите на экран столбец ключей, с помощью второго — столбец элементов.
 
$arr = array('green'=>'зеленый', 'red'=>'красный','blue'=>'голубой')?
 
6. Дан массив $arr с ключами 'Коля', 'Вася', 'Петя' с элементами '200', '300', '400'. С помощью цикла foreach выведите на экран столбец строк такого формата: 'Коля — зарплата 200 долларов.'. [8 баллов]
 
7. Дан массив $arr. С помощью цикла foreach запишите английские названия в массив $en, а русские — в массив $ru.
 
$arr = array('green'=>'зеленый', 'red'=>'красный','blue'=>'голубой')? 
 
$en = array('green', 'red','blue')? 
 
$ru = array('зеленый', 'красный', 'голубой')?
 
8. Дан массив с элементами 2, 5, 9, 15, 0, 4. С помощью цикла foreach и оператора if выведите на экран столбец тех элементов массива, которые больше 3¬, но меньше 10.
 
9. Дан массив с элементами 1, 2, 3, 4, 5, 6, 7, 8, 9. С помощью цикла foreach создайте строку '¬1-2¬3¬4¬5¬6¬7¬8¬9¬'. Циклы while и for.
 
10. Выведите столбец чисел от 1 до 100.
 
11. Выведите столбец чисел от 11 до 33.
 
12. Выведите столбец чётных чисел в промежутке от нуля до 100.
 
13. Дано число $n = 1000. Делите его на 2 столько раз, пока результат деления не станет меньше 50. Какое число получится? Посчитайте количество итераций, необходимых для этого (итерации — это количество проходов цикла), и запишите его в переменную $num.
 
14. Вывести таблицу умножения.
 
15. Дан массив с элементами 4, 2, 5, 19, 13, 0, 10. С помощью цикла foreach и оператора if проверьте есть ли в массиве элемент со значением $e, равном 2, 3 или 4. Если есть — выведите на экран 'Есть!', иначе выведите 'Нет!'.
 
16. Дан массив $arr. С помощью цикла foreach и переменной $count подсчитайте количество элементов этого массива.
 
Проверьте работу скрипта на примере массива с элементами 4, 2, 5, 19, 13, 0, 10.
 
17. Дан массив с элементами 1, 2, 3, 4, 5, 6, 7, 8, 9. С помощью цикла foreach и оператора if выведите на экран столбец элементов массива, как показано ниже: 
 
1,
2,
3,
4,
5,
6,
7,
8,
9
 
18. Составьте массив месяцев. С помощью цикла foreach выведите все месяцы, а текущий месяц выведите жирным. Текущий месяц должен храниться в переменной $month.
 
19. Составьте массив дней недели. С помощью цикла foreach выведите все дни недели, выходные дни следует вывести жирным.
 
20. Составьте массив дней недели. С помощью цикла foreach выведите все дни недели, а текущий день выведите курсивом. Текущий день должен храниться в переменной $day.
 
21. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть 20 рядов, а не 5.

x
xx
xxx
xxxx
xxxxx
 
22. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть 9 рядов, а не 5.

1
22
333
4444
55555
 
23. Нарисуйте пирамиду, как показано на рисунке, используя цикл for или while.
 
xx
xxxx
xxxxxx
xxxxxxxx
xxxxxxxxxx
 
24. Вам нужно разработать программу, которая считала бы сумму цифр числа, введённого пользователем.
 
Например: есть число 123, то программа должна вычислить сумму цифр 1, 2, 3, т.е. 6.
 
По желанию можете сделать проверку на корректность введения данных пользователем.
 
25. Вам нужно разработать программу, которая считала бы количество вхождений какой-нибуть выбранной вами цифры в выбранном вами числе. Например: цифра 5 в числе 442158755745 встречается 4 раза.
 
26. Создать массив, наполнить его случайными значениями (функция rand), найти максимальное и минимальное значение и поменять их местами.
 
27. Создать массив и заполнить его случайными числами от 1 до 100 (функция rand). Далее, вычислить произведение тех элементов, которые больше ноля и у которых парные индексы. После вывести на экран элементы, которые больше ноля и у которых не парный индекс.
 
28. Создать генератор случайных таблиц. Есть переменные: $row - кол-во строк в таблице, $cols - кол-во столбцов в таблице. Есть список цветов, в массиве: $colors = array('red','yellow','blue','gray','maroon','brown','green'). Необходимо создать скрипт, который по заданным условиям выведет таблицу размера $rows на $cols, в которой все ячейки будут иметь цвета, выбранные случайным образом из массива $colors. В каждой ячейке должно находиться случайное число. 

Пример результата:
 
2033	11696	712	32583	157
25694	19724	18487	8462	4412
4673	14450	16748	3505	5299
16873	21370	22482	28576	26060
28955	8804	26825	31471	22283
 
29. Вывести таблицу умножения с помощью двух циклов for.
 
Домашнее задание (дополнительное) по прошлой теме, которую мы прошли не до конца:
[сейчас выполняем в меру возможности, а после Сб.08.10.2016 - обязательно]

1. Изучите руководство и выполните его предписания:
https://docs.google.com/document/d/16GUpa-t9iBAct1EVcebbRZGEOzqafk7zb7cX8JGwLlg/edit?usp=sharing

2. Пройти с начала до конца интерактивный мини-курс по командам работы с системой контроля версий. Ссылка: https://try.github.io/levels/1/challenges/1

3. Зарегистрироваться на GitHub.com; если уже есть аккаунт, с которым вы готовы работать в рамках курса, то дополнительно регистрировать не нужно. Выслать на aversilov@gmail.com свой логин на GitHub'е.

4. Найдите через поисковик чей-либо аккаунт на GitHub с рабочим проектом (критерий: проект должен содержать более 10 файлов PHP и иметь объём - без картинок и др. медиа-файлов - более чем 100 kb), клонируйте себе этот проект, запустите его на "локалке" (чтоб убедиться, что он рабочий и без error'ов), и напишите в вольной форме - что вы можете сказать об этом проекте с точки зрения работы над ним его авторов/автора: сколько коммитов было всего, дата последего коммита, когда проект был заброшен, какие ветки есть у этого проекта, какая ветвь основная, релизная, девелоперская, сколько человек работали и/или работаЮТ над этим проектом, перечислите файлы его ФТОНТЕНДА и файлы его БЕКЕНДА, перечислите все виды запросов, которыми обмениваются его серверная и клиентская части, опишите хотя бы эскизно - что за данные перегоняются с "клиента" на "сервер" и наоборот, каков смысл этого веб-приложения, для чего оно предназначено, сколько примерно денег смогут извлечь его авторы за ближайший год его работы и насколько оно актуально для Украины или для Европы, другие технические/программыные и общие подробности. Поиграем в шпионов: кто больше нашпионит информации о выбранном проекте?

